{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{Bar}from'react-chartjs-2';// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const Dashboard=()=>{const[products,setProducts]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{// Fetch product data from the back-end API\nconst fetchData=async()=>{try{const response=await axios.post('http://127.0.0.1:5000/adjust-prices-with-forecast',[{product_id:'P001',base_price:100.0,inventory:8,average_rating:4.6},{product_id:'P002',base_price:200.0,inventory:50,average_rating:4.0},{product_id:'P003',base_price:50.0,inventory:5,average_rating:2.8}]);setProducts(response.data);setLoading(false);}catch(error){console.error('Error fetching data:',error);// Log error\n}};fetchData();},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}// Prepare data for the bar chart\nconst chartData={labels:products.map(product=>product.product_id),datasets:[{label:'Base Price',data:products.map(product=>product.base_price),backgroundColor:'rgba(75,192,192,0.6)'},{label:'Adjusted Price',data:products.map(product=>product.adjusted_price),backgroundColor:'rgba(153,102,255,0.6)'},{label:'Competitor Price',data:products.map(product=>product.competitor_price||0),backgroundColor:'rgba(255,99,132,0.6)'}]};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Dynamic Pricing Dashboard\"}),/*#__PURE__*/_jsx(Bar,{data:chartData}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Product ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Base Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Adjusted Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Competitor Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Forecasted Demand\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Inventory\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Average Rating\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:products.map(product=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:product.product_id}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",product.base_price.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",product.adjusted_price.toFixed(2)]}),/*#__PURE__*/_jsx(\"td\",{children:product.competitor_price===\"N/A\"?\"N/A\":\"$\".concat(product.competitor_price.toFixed(2))}),/*#__PURE__*/_jsx(\"td\",{children:product.forecasted_demand}),/*#__PURE__*/_jsx(\"td\",{children:product.inventory}),/*#__PURE__*/_jsx(\"td\",{children:product.average_rating})]},product.product_id))})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsx","_jsx","jsxs","_jsxs","register","Dashboard","products","setProducts","loading","setLoading","fetchData","response","post","product_id","base_price","inventory","average_rating","data","error","console","children","chartData","labels","map","product","datasets","label","backgroundColor","adjusted_price","competitor_price","toFixed","concat","forecasted_demand"],"sources":["C:/Users/alexz/Desktop/Projects/Dynamic Pricing System/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch product data from the back-end API\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:5000/adjust-prices-with-forecast', [\r\n                { product_id: 'P001', base_price: 100.0, inventory: 8, average_rating: 4.6 },\r\n                { product_id: 'P002', base_price: 200.0, inventory: 50, average_rating: 4.0 },\r\n                { product_id: 'P003', base_price: 50.0, inventory: 5, average_rating: 2.8 },\r\n            ]);\r\n            setProducts(response.data);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);  // Log error\r\n        }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Prepare data for the bar chart\r\n  const chartData = {\r\n    labels: products.map((product) => product.product_id),\r\n    datasets: [\r\n      {\r\n        label: 'Base Price',\r\n        data: products.map((product) => product.base_price),\r\n        backgroundColor: 'rgba(75,192,192,0.6)',\r\n      },\r\n      {\r\n        label: 'Adjusted Price',\r\n        data: products.map((product) => product.adjusted_price),\r\n        backgroundColor: 'rgba(153,102,255,0.6)',\r\n      },\r\n      {\r\n        label: 'Competitor Price',\r\n        data: products.map((product) => product.competitor_price || 0),\r\n        backgroundColor: 'rgba(255,99,132,0.6)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dynamic Pricing Dashboard</h1>\r\n      {/* Bar Chart */}\r\n      <Bar data={chartData} />\r\n\r\n      {/* Product Table */}\r\n      <table>\r\n        <thead>\r\n            <tr>\r\n                <th>Product ID</th>\r\n                <th>Base Price</th>\r\n                <th>Adjusted Price</th>\r\n                <th>Competitor Price</th>\r\n                <th>Forecasted Demand</th>\r\n                <th>Inventory</th>\r\n                <th>Average Rating</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {products.map((product) => (\r\n                <tr key={product.product_id}>\r\n                    <td>{product.product_id}</td>\r\n                    <td>${product.base_price.toFixed(2)}</td>\r\n                    <td>${product.adjusted_price.toFixed(2)}</td>\r\n                    <td>{product.competitor_price === \"N/A\" ? \"N/A\" : `$${product.competitor_price.toFixed(2)}`}</td>\r\n                    <td>{product.forecasted_demand}</td>\r\n                    <td>{product.inventory}</td>\r\n                    <td>{product.average_rating}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}