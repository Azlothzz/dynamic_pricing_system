{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexz\\\\Desktop\\\\Projects\\\\Dynamic Pricing System\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport fetchAdjustedPrices from './services/api';\nimport SalesTrendChart from './SalesTrendChart'; // Existing chart (if needed)\nimport Charts from './components/Charts'; // New Charts component\nimport Dashboard from './components/Dashboard'; // Adjust the path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateInsights = products => {\n  if (!Array.isArray(products)) {\n    console.warn('Products is not an array:', products);\n    return {\n      totalRevenue: 0,\n      lowInventory: 0\n    }; // Fallback values\n  }\n\n  // Calculate total revenue\n  const totalRevenue = products.reduce((sum, product) => {\n    const adjustedPrice = product.adjusted_price || 0; // Handle missing adjusted_price\n    const sales = product.sales_last_30_days || 0; // Handle missing sales_last_30_days\n    return sum + adjustedPrice * sales;\n  }, 0);\n\n  // Count products with low inventory\n  const lowInventory = products.filter(product => product.inventory < 10).length;\n  return {\n    totalRevenue,\n    lowInventory\n  };\n};\nconst App = () => {\n  _s();\n  const [adjustedPrices, setAdjustedPrices] = useState([]);\n  const [salesData, setSalesData] = useState([]); // New state for sales trends\n  const [error, setError] = useState(null);\n\n  // Fetch adjusted prices and sales data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchAdjustedPrices();\n        console.log('API Response:', data); // Debugging log\n        setAdjustedPrices(data || []); // Ensure it's always an array\n\n        // Mock sales data for demonstration\n        setSalesData([{\n          date: \"2024-10-01\",\n          product_id: \"P001\",\n          units_sold: 5\n        }, {\n          date: \"2024-10-02\",\n          product_id: \"P001\",\n          units_sold: 10\n        }, {\n          date: \"2024-10-01\",\n          product_id: \"P002\",\n          units_sold: 3\n        }, {\n          date: \"2024-10-01\",\n          product_id: \"P003\",\n          units_sold: 1\n        }]);\n      } catch (err) {\n        setError('Failed to fetch adjusted prices.');\n      }\n    };\n    fetchData();\n  }, []);\n  const insights = calculateInsights(adjustedPrices);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Pricing Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : adjustedPrices.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Key Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Revenue:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), \" $\", insights.totalRevenue.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Products with Low Inventory:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), \" \", insights.lowInventory]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Interactive Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Charts, {\n          salesData: salesData,\n          competitorData: adjustedPrices.map(product => ({\n            product_id: product.product_id,\n            base_price: product.base_price,\n            adjusted_price: product.adjusted_price,\n            competitor_price: product.competitor_price\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Product Catalog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          style: {\n            width: '100%',\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Base Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Inventory\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Competitor Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Adjusted Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: adjustedPrices.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.product_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", product.base_price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.inventory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", product.competitor_price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", product.adjusted_price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"CGt6giJpXr8KXxfQVtlmrak6Ye0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchAdjustedPrices","SalesTrendChart","Charts","Dashboard","jsxDEV","_jsxDEV","calculateInsights","products","Array","isArray","console","warn","totalRevenue","lowInventory","reduce","sum","product","adjustedPrice","adjusted_price","sales","sales_last_30_days","filter","inventory","length","App","_s","adjustedPrices","setAdjustedPrices","salesData","setSalesData","error","setError","fetchData","data","log","date","product_id","units_sold","err","insights","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","toFixed","competitorData","map","base_price","competitor_price","border","cellPadding","width","textAlign","index","_c","$RefreshReg$"],"sources":["C:/Users/alexz/Desktop/Projects/Dynamic Pricing System/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport fetchAdjustedPrices from './services/api';\r\nimport SalesTrendChart from './SalesTrendChart'; // Existing chart (if needed)\r\nimport Charts from './components/Charts'; // New Charts component\r\nimport Dashboard from './components/Dashboard'; // Adjust the path if needed\r\n\r\nconst calculateInsights = (products) => {\r\n    if (!Array.isArray(products)) {\r\n        console.warn('Products is not an array:', products);\r\n        return { totalRevenue: 0, lowInventory: 0 }; // Fallback values\r\n    }\r\n\r\n    // Calculate total revenue\r\n    const totalRevenue = products.reduce((sum, product) => {\r\n        const adjustedPrice = product.adjusted_price || 0; // Handle missing adjusted_price\r\n        const sales = product.sales_last_30_days || 0; // Handle missing sales_last_30_days\r\n        return sum + adjustedPrice * sales;\r\n    }, 0);\r\n\r\n    // Count products with low inventory\r\n    const lowInventory = products.filter((product) => product.inventory < 10).length;\r\n\r\n    return { totalRevenue, lowInventory };\r\n};\r\n\r\nconst App = () => {\r\n    const [adjustedPrices, setAdjustedPrices] = useState([]);\r\n    const [salesData, setSalesData] = useState([]); // New state for sales trends\r\n    const [error, setError] = useState(null);\r\n\r\n    // Fetch adjusted prices and sales data\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await fetchAdjustedPrices();\r\n                console.log('API Response:', data); // Debugging log\r\n                setAdjustedPrices(data || []); // Ensure it's always an array\r\n\r\n                // Mock sales data for demonstration\r\n                setSalesData([\r\n                    { date: \"2024-10-01\", product_id: \"P001\", units_sold: 5 },\r\n                    { date: \"2024-10-02\", product_id: \"P001\", units_sold: 10 },\r\n                    { date: \"2024-10-01\", product_id: \"P002\", units_sold: 3 },\r\n                    { date: \"2024-10-01\", product_id: \"P003\", units_sold: 1 },\r\n                ]);\r\n            } catch (err) {\r\n                setError('Failed to fetch adjusted prices.');\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const insights = calculateInsights(adjustedPrices);\r\n\r\n    return (\r\n        <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n            <h1>Dynamic Pricing Dashboard</h1>\r\n            {error ? (\r\n                <p style={{ color: 'red' }}>{error}</p>\r\n            ) : adjustedPrices.length === 0 ? (\r\n                <p>No data available.</p>\r\n            ) : (\r\n                <div>\r\n                    {/* Insights Section */}\r\n                    <div style={{ marginBottom: '20px' }}>\r\n                        <h2>Key Insights</h2>\r\n                        <p>\r\n                            <strong>Total Revenue:</strong> ${insights.totalRevenue.toFixed(2)}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Products with Low Inventory:</strong> {insights.lowInventory}\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* Charts Section */}\r\n                    <div style={{ marginBottom: '40px' }}>\r\n                        <h2>Interactive Charts</h2>\r\n                        <Charts\r\n                            salesData={salesData}\r\n                            competitorData={adjustedPrices.map((product) => ({\r\n                                product_id: product.product_id,\r\n                                base_price: product.base_price,\r\n                                adjusted_price: product.adjusted_price,\r\n                                competitor_price: product.competitor_price,\r\n                            }))}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Table Section */}\r\n                    <div>\r\n                        <h2>Product Catalog</h2>\r\n                        <table border=\"1\" cellPadding=\"10\" style={{ width: '100%', textAlign: 'left' }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Product ID</th>\r\n                                    <th>Base Price</th>\r\n                                    <th>Inventory</th>\r\n                                    <th>Competitor Price</th>\r\n                                    <th>Adjusted Price</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {adjustedPrices.map((product, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{product.product_id}</td>\r\n                                        <td>${product.base_price.toFixed(2)}</td>\r\n                                        <td>{product.inventory}</td>\r\n                                        <td>${product.competitor_price.toFixed(2)}</td>\r\n                                        <td>${product.adjusted_price.toFixed(2)}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}